{
  "version": 3,
  "sources": ["../../@cloudinary/transformation-builder-sdk/internal/utils/prepareColor.js", "../../@cloudinary/transformation-builder-sdk/qualifiers/background/shared/base/BackgroundQualifier.js", "../../@cloudinary/transformation-builder-sdk/qualifiers/background/shared/base/BaseCommonBackground.js", "../../@cloudinary/transformation-builder-sdk/qualifiers/background/shared/auto/BackgroundAutoBorderQualifier.js", "../../@cloudinary/transformation-builder-sdk/qualifiers/background/shared/base/BaseGradientBackground.js", "../../@cloudinary/transformation-builder-sdk/qualifiers/background/shared/gradient/BackgroundBorderGradientQualifier.js", "../../@cloudinary/transformation-builder-sdk/qualifiers/background/shared/auto/BackgroundAutoPredominantQualifier.js", "../../@cloudinary/transformation-builder-sdk/qualifiers/background/shared/gradient/BackgroundPredominantGradientQualifier.js", "../../@cloudinary/transformation-builder-sdk/qualifiers/background/shared/BlurredBackgroundAction.js", "../../@cloudinary/transformation-builder-sdk/internal/utils/encodePromptComponents.js", "../../@cloudinary/transformation-builder-sdk/qualifiers/background/shared/BackgroundGenerativeFillQualifier.js", "../../@cloudinary/transformation-builder-sdk/qualifiers/background.js"],
  "sourcesContent": ["/**\n * Returns RGB or Color\n * @private\n * @param color\n */\nexport function prepareColor(color) {\n    if (color) {\n        return color.match(/^#/) ? `rgb:${color.substr(1)}` : color;\n    }\n    else {\n        return color;\n    }\n}\n", "import { Qualifier } from \"../../../../internal/qualifier/Qualifier.js\";\n/**\n * @description Defines the visual appearance of the background.\n * @memberOf Qualifiers.Background\n * @extends {SDK.Qualifier}\n */\nclass BackgroundQualifier extends Qualifier {\n    constructor(backgroundValue) {\n        // The qualifier key for this qualifier\n        super('b');\n        // Such as color (b_red)\n        if (backgroundValue) {\n            this.addValue(backgroundValue);\n        }\n    }\n}\nexport { BackgroundQualifier };\n", "import { prepareColor } from \"../../../../internal/utils/prepareColor.js\";\nimport { BackgroundQualifier } from \"./BackgroundQualifier.js\";\n/**\n * @description Defines the background color to use when resizing with padding.\n * @memberOf Qualifiers.Background\n * @extends {Qualifiers.Background.BackgroundQualifier}\n */\nclass BaseCommonBackground extends BackgroundQualifier {\n    constructor() {\n        super();\n        this._palette = [];\n    }\n    /**\n     * @description Selects the strongest contrasting color to use for padding.\n     * @return {this}\n     */\n    contrast() {\n        this._contrast = true;\n        return this;\n    }\n    /**\n     * @description Defines the custom colors to use when resizing using content-aware padding.\n     * @param {...string} colors One or more colors - Example: palette('green', 'red', blue')\n     * @return {this}\n     */\n    palette(...colors) {\n        this._palette = colors.map((color) => {\n            return prepareColor(color);\n        });\n        return this;\n    }\n}\nexport { BaseCommonBackground };\n", "import { BaseCommonBackground } from \"../base/BaseCommonBackground.js\";\n/**\n * @description Automatically determines the color to use for padding, if needed when resizing an asset. Selects the\n * predominant color from the border of the image.\n * @memberOf Qualifiers.Background\n * @extends {Qualifiers.Background.BaseCommonBackground}\n */\nclass BackgroundAutoBorderQualifier extends BaseCommonBackground {\n    /**\n     * @description\n     * Stringify the qualifier\n     * BackgroundQualifiers don't have a value, but instead override the toString() function.\n     */\n    toString() {\n        return `\n    b_auto:border\n    ${this._contrast ? '_contrast' : ''}\n    ${this._palette.length ? `:palette_${this._palette.join('_')}` : ''}\n    `.replace(/\\s+/g, '');\n    }\n}\nexport { BackgroundAutoBorderQualifier };\n", "import { BaseCommonBackground } from \"./BaseCommonBackground.js\";\n/**\n * @description Defines the gradient fade effect to use for the background when resizing with padding.\n * @memberOf Qualifiers.Background\n * @extends {Qualifiers.Background.BaseCommonBackground}\n */\nclass BaseGradientBackground extends BaseCommonBackground {\n    /**\n     *\n     * @description Sets the number of predominant colors to use (2 or 4).\n     * @param {number} num\n     * @return {this}\n     */\n    gradientColors(num) {\n        this._gradientColors = num;\n        return this;\n    }\n    /**\n     * @description Sets the direction for a background gradient fade effect.\n     * @param {Qualifiers.GradientDirection | GradientDirectionType | string} direction Use one of these functions\n     * provided by {@link Qualifiers.GradientDirection|GradientDirection}\n     * @return {this}\n     */\n    gradientDirection(direction) {\n        this._gradientDirection = direction;\n        return this;\n    }\n}\nexport { BaseGradientBackground };\n", "import { BaseGradientBackground } from \"../base/BaseGradientBackground.js\";\n/**\n * @description Specifies that the gradient fade effect, used for the background when resizing with padding, uses the\n * predominant colors in the border pixels of the image.\n * @memberOf Qualifiers.Background\n * @extends {Qualifiers.Background.BaseGradientBackground}\n */\nclass BackgroundBorderGradientQualifier extends BaseGradientBackground {\n    /**\n     * @description\n     * Stringify the qualifier\n     * BackgroundQualifiers don't have a value, but instead override the toString() function.\n     */\n    toString() {\n        return `\n    b_auto:border_gradient\n    ${this._contrast ? '_contrast' : ''}\n    ${this._gradientColors ? `:${this._gradientColors}` : ''}\n    ${this._gradientDirection ? `:${this._gradientDirection}` : ''}\n    ${this._palette.length ? `:palette_${this._palette.join('_')}` : ''}\n    `.replace(/\\s+/g, '');\n    }\n}\nexport { BackgroundBorderGradientQualifier };\n", "import { BaseCommonBackground } from \"../base/BaseCommonBackground.js\";\n/**\n * @description Automatically determines the color to use for padding, if needed when resizing an asset. Selects the\n * predominant color from the whole image.\n * @memberOf Qualifiers.Background\n * @extends {Qualifiers.Background.BaseCommonBackground}\n */\nclass BackgroundAutoPredominantQualifier extends BaseCommonBackground {\n    /**\n     * @description\n     * Stringify the qualifier\n     * BackgroundQualifiers don't have a value, but instead override the toString() function.\n     */\n    toString() {\n        return `\n    b_auto:predominant\n    ${this._contrast ? '_contrast' : ''}\n    ${this._palette.length ? `:palette_${this._palette.join('_')}` : ''}\n    `.replace(/\\s+/g, '');\n    }\n}\nexport { BackgroundAutoPredominantQualifier };\n", "import { BaseGradientBackground } from \"../base/BaseGradientBackground.js\";\n/**\n * @description Specifies that the gradient fade effect, used for the background when resizing with padding, uses the\n * predominant colors in the whole of the image.\n * @memberOf Qualifiers.Background\n * @extends {Qualifiers.Background.BaseGradientBackground}\n */\nclass BackgroundPredominantGradientQualifier extends BaseGradientBackground {\n    /**\n     * @description\n     * Stringify the qualifier\n     * BackgroundQualifiers don't have a value, but instead override the toString() function.\n     */\n    toString() {\n        return `\n    b_auto:predominant_gradient\n    ${this._contrast ? '_contrast' : ''}\n    ${this._gradientColors ? `:${this._gradientColors}` : ''}\n    ${this._gradientDirection ? `:${this._gradientDirection}` : ''}\n    ${this._palette.length ? `:palette_${this._palette.join('_')}` : ''}\n    `.replace(/\\s+/g, '');\n    }\n}\nexport { BackgroundPredominantGradientQualifier };\n", "import { BackgroundQualifier } from \"./base/BackgroundQualifier.js\";\nexport const DEFAULT_INTENSITY = 100;\nexport const DEFAULT_BRIGHTNESS = 0;\n/**\n * @description A class for blurred background transformations.\n * @memberOf Qualifiers.Background\n * @extends {Qualifiers.Background.BackgroundQualifier}\n */\nclass BlurredBackgroundAction extends BackgroundQualifier {\n    /**\n     * @description Sets the intensity of the blur.\n     * @param {number} value - The intensity of the blur.\n     */\n    intensity(value) {\n        this.intensityLevel = value;\n        return this;\n    }\n    /**\n     * @description Sets the brightness of the background.\n     * @param {number} value - The brightness of the background.\n     */\n    brightness(value) {\n        this.brightnessLevel = value;\n        return this;\n    }\n    /**\n     * @description\n     * Stringify the qualifier\n     * BackgroundQualifiers don't have a value, but instead override the toString() function\n     */\n    toString() {\n        // b_blurred:{intensity}:{brightness}\n        const intensity = this.intensityLevel !== undefined ? `:${this.intensityLevel}` : '';\n        const brightness = this.brightnessLevel !== undefined\n            ? this.intensityLevel !== undefined\n                ? `:${this.brightnessLevel}`\n                : `:${DEFAULT_INTENSITY}:${this.brightnessLevel}`\n            : '';\n        return `b_blurred${intensity}${brightness}`;\n    }\n}\nexport default BlurredBackgroundAction;\n", "export const encodePromptComponent = (prompt) => composeStringOperations(encodeURIComponent, replaceMissingChars, decodeSpaces)(prompt);\nconst charsMissingFromUrlEncode = /[!'()*~_.-]/g;\nconst missingCharsMap = {\n    '!': '%21',\n    \"'\": '%27',\n    '(': '%28',\n    ')': '%29',\n    '*': '%2A',\n    '~': '%7E',\n    _: '%5F',\n    '.': '%2E',\n    '-': '%2D',\n};\nconst replaceMissingChars = (str) => {\n    return str.replace(charsMissingFromUrlEncode, (match) => { var _a; return (_a = missingCharsMap[match]) !== null && _a !== void 0 ? _a : match; });\n};\nconst decodeSpaces = (str) => str.replace(/%20/g, ' ');\nconst composeStringOperations = (...fns) => (arg) => fns.reduce((acc, fn) => fn(acc), arg);\n", "import { encodePromptComponent } from \"../../../internal/utils/encodePromptComponents.js\";\nimport { BackgroundQualifier } from \"./base/BackgroundQualifier.js\";\n/**\n * @description Automatically fills the padded area using generative AI to extend the image seamlessly.\n * Optionally include a prompt to guide the image generation.\n * @memberOf Qualifiers.Background\n */\nclass BackgroundGenerativeFillQualifier extends BackgroundQualifier {\n    constructor() {\n        super(\"gen_fill\");\n        this._backgroundType = 'generativeFill';\n    }\n    prompt(prompt) {\n        this._prompt = decodeURIComponent(prompt);\n        return this;\n    }\n    getPrompt() {\n        return this._prompt;\n    }\n    getBackgroundType() {\n        return this._backgroundType;\n    }\n    /**\n     * @description\n     * Override the toString() function to explicitly stringify the qualifier.\n     */\n    toString() {\n        return `b_gen_fill${this._prompt ? `:prompt_${encodePromptComponent(this._prompt)}` : ''}`;\n    }\n}\nexport { BackgroundGenerativeFillQualifier };\n", "import { prepareColor } from \"../internal/utils/prepareColor.js\";\nimport { BackgroundAutoBorderQualifier } from \"./background/shared/auto/BackgroundAutoBorderQualifier.js\";\nimport { BackgroundBorderGradientQualifier } from \"./background/shared/gradient/BackgroundBorderGradientQualifier.js\";\nimport { BackgroundAutoPredominantQualifier } from \"./background/shared/auto/BackgroundAutoPredominantQualifier.js\";\nimport { BackgroundPredominantGradientQualifier } from \"./background/shared/gradient/BackgroundPredominantGradientQualifier.js\";\nimport BlurredBackgroundAction from \"./background/shared/BlurredBackgroundAction.js\";\nimport { BackgroundQualifier } from \"./background/shared/base/BackgroundQualifier.js\";\nimport { BackgroundGenerativeFillQualifier } from \"./background/shared/BackgroundGenerativeFillQualifier.js\";\n/**\n * @description Defines the background color to use instead of transparent background areas or when resizing with padding.\n *\n * <b>Learn more:</b> {@link https://cloudinary.com/documentation/effects_and_artistic_enhancements#setting_background_color|Setting background for images} | {@link https://cloudinary.com/documentation/video_effects_and_enhancements#background_color|Setting background for videos}\n *\n * @namespace Background\n * @memberOf Qualifiers\n */\n/**\n * @summary qualifier\n * @description Selects the predominant color while taking only the image border pixels into account.\n * @memberOf Qualifiers.Background\n * @return {BackgroundAutoBorderQualifier}\n */\nfunction border() {\n    return new BackgroundAutoBorderQualifier();\n}\n/**\n * @summary qualifier\n * @description Automatically determines the color to use for padding, if needed when resizing an asset.\n *\n * <b>Learn more:</b> {@link https://cloudinary.com/documentation/effects_and_artistic_enhancements#content_aware_padding|Content-aware padding}\n * @memberOf Qualifiers.Background\n * @return {Qualifiers.Background.BackgroundQualifier}\n */\nfunction auto() {\n    return new BackgroundQualifier('auto');\n}\n/**\n * @summary qualifier\n * @description Applies a padding gradient fade effect using the predominant colors in the border of the image.\n * @memberOf Qualifiers.Background\n * @return {BackgroundBorderGradientQualifier}\n */\nfunction borderGradient() {\n    return new BackgroundBorderGradientQualifier();\n}\n/**\n * @summary qualifier\n * @description Applies a padding gradient fade effect using the predominant colors in the image.\n * @memberOf Qualifiers.Background\n * @return {BackgroundPredominantGradientQualifier}\n */\nfunction predominantGradient() {\n    return new BackgroundPredominantGradientQualifier();\n}\n/**\n * @summary qualifier\n * @description Selects the predominant color while taking all pixels in the image into account\n * @memberOf Qualifiers.Background\n * @return {BackgroundAutoPredominantQualifier}\n */\nfunction predominant() {\n    return new BackgroundAutoPredominantQualifier();\n}\n/**\n * @summary qualifier\n * @description Selects the predominant color while taking all pixels in the image into account.\n * @memberOf Qualifiers.Background\n * @return {Qualifiers.Background.BackgroundQualifier}\n */\nfunction color(colorStr) {\n    return new BackgroundQualifier(prepareColor(colorStr));\n}\n/**\n * @summary qualifier\n * @description Selects the predominant color while taking all pixels in the image into account.\n * @memberOf Qualifiers.Background\n * @return {BlurredBackgroundAction}\n */\nfunction blurred() {\n    return new BlurredBackgroundAction();\n}\n/**\n * @summary qualifier\n * @description A qualifier that automatically fills the padded area using generative AI to extend the image seamlessly.\n * @memberOf Qualifiers.Background\n * @return {BackgroundGenerativeFillQualifier}\n */\nfunction generativeFill() {\n    return new BackgroundGenerativeFillQualifier();\n}\nconst Background = {\n    auto,\n    border,\n    borderGradient,\n    predominantGradient,\n    predominant,\n    color,\n    blurred,\n    generativeFill\n};\nexport { auto, border, borderGradient, predominantGradient, predominant, color, blurred, generativeFill, Background };\n"],
  "mappings": "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",
  "names": ["color", "color"]
}
